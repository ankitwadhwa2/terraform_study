provider "aws" {
    region = "us-east-2"
    access_key = "AKIA52GHA42572YNKEAV"
    secret_key ="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"
}


################################################################

# # 1. Create vpc

 resource "aws_vpc" "project" {
  cidr_block       = "10.0.0.0/16"
 # instance_tenancy = "default"

  tags = {
    Name = "MyprojectVPC"
  }
}

# Cretae gateway


resource "aws_internet_gateway" "ProjectGW" {
  vpc_id = aws_vpc.project.id

  tags = {
    Name = "MMyprojectGW"
  }
}

#Route Teable

resource "aws_route_table" "ProjectRoute" {
  vpc_id = aws_vpc.project.id

  route {
    cidr_block = "0.0.0.0/0"
    gateway_id = aws_internet_gateway.ProjectGW.id
  }

  route {
    ipv6_cidr_block        = "::/0"
    gateway_id = aws_internet_gateway.ProjectGW.id
  }

  tags = {
    Name = "ProjectRT"
  }
}

# Create Subnet

resource "aws_subnet" "ProjectSubnet" {
  vpc_id     = aws_vpc.project.id
  cidr_block = "10.0.1.0/24"
  availability_zone = "us-east-2a"

  tags = {
    Name = "Main"
  }
}


#Associate Subnet with Route Table

resource "aws_route_table_association" "a" {
  subnet_id      = aws_subnet.ProjectSubnet.id
  route_table_id = aws_route_table.ProjectRoute.id
}

# Create Scesurity Group to open port 

resource "aws_security_group" "web_traffic" {
  name        = "web_traffic"
  description = "Allow WEB inbound traffic"
  vpc_id      = aws_vpc.project.id

  ingress {
    description = "HTTPS from VPC"
    from_port   = 443
    to_port     = 443
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }

  ingress {
    description = "HTTP from VPC"
    from_port   = 80
    to_port     = 80
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }

  ingress {
    description = "SSHPS from VPC"
    from_port   = 22
    to_port     = 22
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }

  egress {
    from_port   = 0
    to_port     = 0
    protocol    = "-1"
    cidr_blocks = ["0.0.0.0/0"]
  }

  tags = {
    Name = "allow_web"
  }
}

# creat Network Interface

resource "aws_network_interface" "WebNetInt" {
  subnet_id       = aws_subnet.ProjectSubnet.id
  private_ips     = ["10.0.1.50"]
  security_groups = [aws_security_group.web_traffic.id]

  #attachment {
  #  instance     = aws_instance.test.id
  #  device_index = 1
 # }
}


# Create ELastic IP

resource "aws_eip" "projecteip" {
  vpc                       = true
  network_interface         = aws_network_interface.WebNetInt.id
  associate_with_private_ip = "10.0.1.50"
  depends_on = [aws_internet_gateway.ProjectGW]
  instance = aws_instance.myserver.id
}

resource "aws_eip_association" "eip_assoc" {
  instance_id   = aws_instance.myserver.id
  allocation_id = aws_eip.projecteip.id
}

output "server_public_ip" {
  value = aws_eip.projecteip.public_ip
}

# Cretae Ubuntu Server
resource "aws_instance" "myserver"{
    ami           = "ami-0a91cd140a1fc148a"
    instance_type = "t2.micro"
    availability_zone = "us-east-2a"
    key_name = "terraformkey"
    network_interface {
       device_index = 0
       network_interface_id = aws_network_interface.WebNetInt.id
    }
    user_data = <<-EOF1
                #!/bin/bash
                sudo apt update -y
                sudo apt install apache2 -y
                sudo systemctl start apache2
                sudo bash -c 'echo your very first web server > /var/www/html/index.html'
                EOF1
    tags = {
      Name = "ubuntu"
    }
}
